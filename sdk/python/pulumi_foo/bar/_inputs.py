# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'NestedObjectArgs',
]

@pulumi.input_type
class NestedObjectArgs:
    def __init__(__self__, *,
                 req_prop: pulumi.Input[str],
                 opt_prop: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        pulumi.set(__self__, "req_prop", req_prop)
        if opt_prop is not None:
            pulumi.set(__self__, "opt_prop", opt_prop)

    @property
    @pulumi.getter(name="reqProp")
    def req_prop(self) -> pulumi.Input[str]:
        return pulumi.get(self, "req_prop")

    @req_prop.setter
    def req_prop(self, value: pulumi.Input[str]):
        pulumi.set(self, "req_prop", value)

    @property
    @pulumi.getter(name="optProp")
    def opt_prop(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        return pulumi.get(self, "opt_prop")

    @opt_prop.setter
    def opt_prop(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "opt_prop", value)


